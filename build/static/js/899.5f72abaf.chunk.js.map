{"version":3,"file":"static/js/899.5f72abaf.chunk.js","mappings":"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","sources":["routes.js","components/AppContent.js","components/AppFooter.js","components/AppHeader.js","components/AppSidebarNav.js","_nav.js","components/AppSidebar.js","layout/DefaultLayout.js"],"sourcesContent":["import React from 'react'\n\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))\nconst LotteryCarousel = React.lazy(() => import('./views/pages/main/campaign-main/CampaignCarousel'))\nconst AddEditLottery = React.lazy(() => import('./views/pages/main/campaign-main/AddEditCampaign'))\n\nconst routes = [\n  { path: '/', exact: true, name: 'Home' },\n  { path: '/dashboard', exact: true, name: 'Dashboard', element: Dashboard },\n  { path: '/campaigns', exact: true, name: 'Campaigns', element: LotteryCarousel },\n  { path: '/campaign/:type/:id', exact: true, name: 'Campaign', element: AddEditLottery },\n\n]\n\nexport default routes\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\nimport { COLORS } from 'src/common/const'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Powered by</span>\n        <a href=\"https://algorixmo.com\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: COLORS.MAIN}}>\n          Algorixmo\n        </a>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderNav,\n  CHeaderToggler,\n  CNavLink,\n  CNavItem,\n  CImage,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\n\nimport { AppHeaderDropdown } from './header/index'\nimport logo from 'src/assets/images/logo.png'\nimport { CLIENT_NAME, COLORS } from 'src/common/const'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\" style={{ display: 'flex', gap: 10, alignSelf: \"center\", color: COLORS.MAIN, fontWeight: 'bold' }}>\n          <CImage src={logo} height={48} />{' '}\n          <span style={{paddingTop: 10}}>{CLIENT_NAME}<span style={{fontSize: '10px'}}>- Portal</span></span>\n        </CHeaderBrand>\n        <CHeaderNav className=\"d-none d-md-flex me-auto\">\n          {/* <CNavItem>\n            <CNavLink to=\"/dashboard\" component={NavLink}>\n              Dashboard\n            </CNavLink>\n          </CNavItem> */}\n          {/* <CNavItem>\n            <CNavLink href=\"#\">Users</CNavLink>\n          </CNavItem> */}\n          <CNavItem>\n            <CNavLink href=\"#\">Settings</CNavLink>\n          </CNavItem>\n        </CHeaderNav>\n        <CHeaderNav>\n          {/* <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilBell} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilList} size=\"lg\" />\n            </CNavLink>\n          </CNavItem>\n          <CNavItem>\n            <CNavLink href=\"#\">\n              <CIcon icon={cilEnvelopeOpen} size=\"lg\" />\n            </CNavLink>\n          </CNavItem> */}\n        </CHeaderNav>\n        <CHeaderNav className=\"ms-3\">\n          <AppHeaderDropdown />\n        </CHeaderNav>\n      </CContainer>\n      {/* <CHeaderDivider /> */}\n      {/* <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer> */}\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\nimport { COLORS } from 'src/common/const'\n\nexport const AppSidebarNav = ({ items }) => {\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\" >\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        style={{ fontWeight: 'bold' }}\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={navLink(name, icon)}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilShortText,\n  cilStar,\n\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\n\nconst _nav = [\n  {\n    component: CNavItem,\n    name: 'Dashboard',\n    to: '/dashboard',\n    icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  },\n  {\n    component: CNavTitle,\n    name: 'Managment',\n  },\n    {\n    component: CNavItem,\n    name: 'Campaigns',\n    to: '/campaigns',\n    icon: <CIcon icon={cilShortText} customClassName=\"nav-icon\" />,\n  },\n \n  // {\n  //   component: CNavTitle,\n  //   name: 'Theme',\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Colors',\n  //   to: '/theme/colors',\n  //   icon: <CIcon icon={cilDrop} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Typography',\n  //   to: '/theme/typography',\n  //   icon: <CIcon icon={cilPencil} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavTitle,\n  //   name: 'Components',\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Base',\n  //   to: '/base',\n  //   icon: <CIcon icon={cilPuzzle} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Accordion',\n  //       to: '/base/accordion',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Breadcrumb',\n  //       to: '/base/breadcrumbs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Cards',\n  //       to: '/base/cards',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Carousel',\n  //       to: '/base/carousels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Collapse',\n  //       to: '/base/collapses',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'List group',\n  //       to: '/base/list-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Navs & Tabs',\n  //       to: '/base/navs',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Pagination',\n  //       to: '/base/paginations',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Placeholders',\n  //       to: '/base/placeholders',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Popovers',\n  //       to: '/base/popovers',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Progress',\n  //       to: '/base/progress',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Spinners',\n  //       to: '/base/spinners',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tables',\n  //       to: '/base/tables',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Tooltips',\n  //       to: '/base/tooltips',\n  //     },\n  //   ],\n  // }\n  // {\n  //   component: CNavGroup,\n  //   name: 'Buttons',\n  //   to: '/buttons',\n  //   icon: <CIcon icon={cilCursor} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons',\n  //       to: '/buttons/buttons',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Buttons groups',\n  //       to: '/buttons/button-groups',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Dropdowns',\n  //       to: '/buttons/dropdowns',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Forms',\n  //   icon: <CIcon icon={cilNotes} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Form Control',\n  //       to: '/forms/form-control',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Select',\n  //       to: '/forms/select',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Checks & Radios',\n  //       to: '/forms/checks-radios',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Range',\n  //       to: '/forms/range',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Input Group',\n  //       to: '/forms/input-group',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Floating Labels',\n  //       to: '/forms/floating-labels',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Layout',\n  //       to: '/forms/layout',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Validation',\n  //       to: '/forms/validation',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavItem,\n  //   name: 'Charts',\n  //   to: '/charts',\n  //   icon: <CIcon icon={cilChartPie} customClassName=\"nav-icon\" />,\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Icons',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Free',\n  //       to: '/icons/coreui-icons',\n  //       badge: {\n  //         color: 'success',\n  //         text: 'NEW',\n  //       },\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Flags',\n  //       to: '/icons/flags',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'CoreUI Brands',\n  //       to: '/icons/brands',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Notifications',\n  //   icon: <CIcon icon={cilBell} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Alerts',\n  //       to: '/notifications/alerts',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Badges',\n  //       to: '/notifications/badges',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Modal',\n  //       to: '/notifications/modals',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Toasts',\n  //       to: '/notifications/toasts',\n  //     },\n  //   ],\n  // },\n  // {\n  //   component: CNavGroup,\n  //   name: 'Pages',\n  //   icon: <CIcon icon={cilStar} customClassName=\"nav-icon\" />,\n  //   items: [\n  //     {\n  //       component: CNavItem,\n  //       name: 'Login',\n  //       to: '/login',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Register',\n  //       to: '/register',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 404',\n  //       to: '/404',\n  //     },\n  //     {\n  //       component: CNavItem,\n  //       name: 'Error 500',\n  //       to: '/500',\n  //     },\n  //   ],\n  // }\n]\n\nexport default _nav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CImage, CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport logo from 'src/assets/images/logo.png'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav'\nimport { CLIENT_NAME, COLORS } from 'src/common/const'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CSidebar\n      style={{ backgroundColor: COLORS.MAIN }}\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand\n        className=\"d-none d-md-flex\"\n        to=\"/\"\n        style={{\n          backgroundColor: 'white',\n          border: '5px solid ' + COLORS.MAIN,\n          borderRadius: '20px',\n          display: 'flex',\n          gap: 20,\n        }}\n      >\n        <CImage src={logo} height={50} className=\"p-1\" />\n        <h5 style={{ color: COLORS.MAIN }}>{CLIENT_NAME}<span style={{fontSize: '11px', fontStyle: 'italic'}}> Portal</span></h5>\n      </CSidebarBrand>\n      <CSidebarNav >\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n      <CSidebarToggler\n        className=\"d-none d-lg-flex\"\n        onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n      />\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["path","exact","name","element","React","AppContent","_jsx","CContainer","lg","children","Suspense","fallback","CSpinner","color","_jsxs","Routes","routes","map","route","idx","Route","Navigate","to","replace","AppFooter","CFooter","className","href","target","rel","style","COLORS","MAIN","dispatch","useDispatch","sidebarShow","useSelector","state","CHeader","position","fluid","CHeaderToggler","onClick","type","CIcon","icon","cilMenu","size","CHeaderBrand","display","gap","alignSelf","fontWeight","CImage","src","logo","height","paddingTop","CLIENT_NAME","fontSize","CHeaderNav","CNavItem","CNavLink","AppHeaderDropdown","AppSidebarNav","_ref","items","location","useLocation","navLink","badge","_Fragment","CBadge","text","navItem","item","index","component","rest","_objectWithoutProperties","_excluded","Component","_createElement","_objectSpread","NavLink","key","navGroup","_item$items","_excluded2","String","toggler","visible","pathname","startsWith","cilStar","customClassName","CNavTitle","cilShortText","AppSidebar","unfoldable","sidebarUnfoldable","CSidebar","backgroundColor","onVisibleChange","CSidebarBrand","border","borderRadius","fontStyle","CSidebarNav","SimpleBar","navigation","CSidebarToggler","AppHeader"],"sourceRoot":""}