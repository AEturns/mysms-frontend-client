{"version":3,"file":"static/js/1340.78bdebee.chunk.js","mappings":"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","sources":["components/Modals/WarningModal.js","services/location.service.js","services/voters.service.js","components/VirtualizedTable.js","components/PdfDocument.js","views/pages/main/reports/ReportsPage.js"],"sourcesContent":["import { cilArrowRight, cilSave, cilWarning } from '@coreui/icons'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { COLORS } from 'src/common/const'\r\nimport CorrectIconAnimation from 'src/assets/other/verified.gif'\r\n\r\nfunction WarningModal({ title, description, open, onOpen, okay, buttonTitle = 'Download' }) {\r\n  const navigate = useNavigate()\r\n  return (\r\n    <CModal\r\n      alignment=\"center\"\r\n      visible={open}\r\n      onClose={() => onOpen(false)}\r\n      aria-labelledby=\"VerticallyCenteredExample\"\r\n    >\r\n      <CModalHeader>\r\n        <CModalTitle id=\"VerticallyCenteredExample\">{title}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody className=\"m-3\">\r\n        <div\r\n          style={{\r\n            textAlign: 'center',\r\n          }}\r\n          className=\"mb-3\"\r\n        >\r\n          {/* <CIcon icon={cilSave} size=\"3xl\" /> */}\r\n          <CIcon style={{ color: COLORS.MAIN }} icon={cilWarning} width={80} />\r\n        </div>\r\n        <p style={{ textAlign: 'center', fontSize: \"1em\" }}>{description}</p>\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"light\" onClick={() => onOpen(false)}>\r\n          Cancel\r\n        </CButton>\r\n        <CButton\r\n            color=\"primary\"\r\n            style={{ backgroundColor: COLORS.MAIN, border: '0px' }}\r\n            onClick={() => {\r\n              okay(true)\r\n              onOpen(false)\r\n            }}\r\n          >\r\n            {buttonTitle}\r\n          </CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  )\r\n}\r\n\r\nexport default WarningModal\r\n","import { algoAxiosInstance } from '../common/AxiosInstance'\r\n\r\nexport const LocationService = {\r\n  getDistricts: async () => {\r\n    try {\r\n      const response = await algoAxiosInstance.get('/districts') \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getDistrictById: async (id) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/districts/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getSeatsByDistrictId: async (districtId) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/seats?filters[District_Id][$eq]=${districtId}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getAllSeats: async () => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/seats`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getSeatById: async (id) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/seats/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getLocalAuthoritiesBySeatId: async (seatId) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/local-authorities?filters[Seat_Id][$eq]=${seatId}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getLocalAuthorityById: async (id) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/local-authorities/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getWardsByLocalAuthorityId: async (localAuthorityId) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/wards?filters[Local_Authority_Id][$eq]=${localAuthorityId}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getWardById: async (id) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/wards/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getGnDivisionsByWardId: async (wardId) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/gn-divisions?filters[Ward_Id][$eq]=${wardId}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  \r\n  getGnDivisionById: async (id) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/gn-divisions/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getStreetsByGnDivisionId: async (gnDivisionId) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/village-streets?filters[GN_Division_Id][$eq]=${gnDivisionId}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getStreetById: async (id) => {\r\n    try {\r\n      const response = await algoAxiosInstance.get(`/village-streets/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n}\r\n","import { axiosInstance } from '../common/AxiosInstance'\r\n\r\nexport const votersService = {\r\n  getVoters: async (page = 1, pageSize = 10) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/voters?pagination[page]=${page}&pagination[pageSize]=${pageSize}&sort[0]=createdAt:desc`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getVoter: async (id) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/voters/${id}`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n  getVotorsByBirthday: async (birthday) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/voters?filters[Date_of_Birth][$containsi]=${birthday}&sort[0]=createdAt:desc`)\r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getVotersByFiltering: async (page = 1, pageSize = 10, filters) => {\r\n    try {\r\n      let query = \"\"\r\n      filters.map((filter) => {\r\n        query = query + `filters[${filter.key}][$containsi]=${filter.value}&`\r\n      })\r\n      const response = await axiosInstance.get(`/voters?pagination[page]=${page}&pagination[pageSize]=${pageSize}&${query}sort[0]=createdAt:desc`) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  getVotersByBirthday: async (birthday) => {\r\n    try {\r\n      const response = await axiosInstance.get(`/voters?filters[Date_of_Birth][$eq]=${birthday}&sort[0]=createdAt:desc`)\r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  addVoter: async (data) => {\r\n    try {\r\n      const response = await axiosInstance.post('/voters', data) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n\r\n  updateVoter: async (id, data) => {\r\n    try {\r\n      const response = await axiosInstance.put(`/voters/${id}`, data) \r\n      return response.data\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { VariableSizeList  } from 'react-window';\r\n\r\nconst VirtualizedTable = ({ data, columns }) => {\r\n    const rowHeight = 80;\r\n    // Row renderer function\r\n    const Row = ({ index, style }) => {\r\n      \r\n      return <div style={{ ...style, display: 'flex', alignItems: 'center', borderBottom: '1px solid #ccc' }}>\r\n        {columns?.map((column, i) => (\r\n          <div key={i} style={{ flex: 1, padding: '5px', textAlign: 'left' }}>{data[index].attributes[column.value]}</div>\r\n        ))}\r\n        \r\n        \r\n        {/* Add other columns based on your data structure */}\r\n      </div>\r\n    };\r\n\r\n    const calculateRowHeight = index => {\r\n      const name = data[index].attributes.Name;\r\n      const nic = data[index].attributes['NIC_Number'];\r\n      const mobile = data[index].attributes['Mobile_Number_1'];\r\n      const address = data[index].attributes['Address'];\r\n  \r\n      // Calculate the maximum length among the columns\r\n      const maxLength = Math.max(name.length, nic.length, mobile.length, address.length);\r\n  \r\n      // Adjust the factor as needed for your specific case\r\n      //const factor = 2.5;\r\n      const factor = window.innerWidth < 600 ? 2.9 : 1;\r\n      \r\n      // Minimum row height is set to 50 pixels\r\n      return Math.max(30, maxLength * factor);\r\n    };\r\n    return (\r\n      <VariableSizeList\r\n        height={400}\r\n        itemCount={data.length}\r\n        itemSize={calculateRowHeight}\r\n        width={'auto'}\r\n      >\r\n        {Row}\r\n      </VariableSizeList>\r\n    );\r\n  };\r\n\r\n  export default VirtualizedTable","import React, { useEffect, useState } from 'react'\r\nimport jsPDF from 'jspdf'\r\nimport VirtualizedTable from './VirtualizedTable'\r\nimport { CLIENT_NAME, COLORS } from 'src/common/const'\r\nimport { CButton, CCol, CFormLabel, CFormText } from '@coreui/react'\r\nimport Select from 'react-select'\r\nimport { exportToExcel } from 'react-json-to-excel'\r\nimport { LocationService } from 'src/services/location.service'\r\nimport { OrganizersService } from 'src/services/organizers.service'\r\nimport moment from 'moment'\r\nimport WarningModal from './Modals/WarningModal'\r\n\r\nconst options = [\r\n  { value: 'Name', label: 'Name', rectVal: 100, textVal: 105, align: 'left' },\r\n  { value: 'NIC_Number', label: 'NIC', rectVal: 30, textVal: 25, align: 'center' },\r\n  { value: 'Mobile_Number_1', label: 'Contact No.', rectVal: 30, textVal: 30, align: 'center' },\r\n  { value: 'Gender', label: 'Gender', rectVal: 30, textVal: 25, align: 'center' },\r\n  { value: 'Civil_Status', label: 'Civil Status', rectVal: 30, textVal: 25, align: 'center' },\r\n  { value: 'Address', label: 'Address', rectVal: 30, textVal: 25, align: 'left' },\r\n]\r\n\r\nconst PdfDocument = ({ data, type }) => {\r\n  const [selectedOption, setSelectedOption] = useState([\r\n    { value: 'Name', label: 'Name', rectVal: 100, textVal: 105, align: 'left' },\r\n    { value: 'NIC_Number', label: 'NIC', rectVal: 30, textVal: 25, align: 'center' },\r\n    { value: 'Mobile_Number_1', label: 'Contact No.', rectVal: 30, textVal: 30, align: 'center' },\r\n  ])\r\n\r\n  const [warningModalVisible, setWarningModalVisible] = useState(false)\r\n  const [loadingMsg, setLoadingMsg] = useState(null)\r\n  const [downloadButtonDisable, setDownloadButtonDisable] = useState(false)\r\n\r\n  const [sortedData, setSortedData] = useState(null)\r\n\r\n  const generatePdf = () => {\r\n    const pdf = new jsPDF({ unit: 'mm', format: 'a4', orientation: 'landscape' })\r\n    const pageHeight = pdf.internal.pageSize.height - 10 // Adjust for margin\r\n    const cellWidth = 100\r\n\r\n    let yPosition = 15\r\n    pdf.text(CLIENT_NAME.toUpperCase(), 150, 5, { align: 'center', baseline: 'middle' })\r\n    pdf.setFontSize(10)\r\n    pdf.text('Report: ' + new Date().toLocaleDateString(), 150, 10, {\r\n      align: 'center',\r\n      baseline: 'middle',\r\n    })\r\n    pdf.setFontSize(12)\r\n\r\n    // Draw table header\r\n    pdf.setDrawColor(0) // Reset color\r\n    let initialRectVal = 10\r\n    let initialTextVal = 15\r\n    selectedOption?.forEach((column, i) => {\r\n      pdf.setFontSize(12)\r\n      pdf.setFillColor(200, 220, 255)\r\n      if (i == 0) {\r\n        pdf.rect(initialRectVal, yPosition, cellWidth, 8, 'F')\r\n        pdf.text(column.label, initialTextVal, yPosition + 5)\r\n      } else {\r\n        initialRectVal = initialRectVal + selectedOption[i - 1].rectVal\r\n        initialTextVal = initialTextVal + selectedOption[i - 1].textVal\r\n        if (column.label == 'Address') {\r\n          pdf.rect(initialRectVal, yPosition, 100, 8, 'F')\r\n        } else {\r\n          pdf.rect(initialRectVal, yPosition, 30, 8, 'F')\r\n        }\r\n\r\n        pdf.text(column.label, initialTextVal, yPosition + 5)\r\n      }\r\n    })\r\n\r\n    yPosition += 10 // Move to the next row\r\n\r\n    // Iterate over each row and add it to the PDF\r\n    data.forEach((row, index) => {\r\n      const rowHeight = 7 // Adjust as needed\r\n      if (yPosition + rowHeight > pageHeight) {\r\n        // Start a new page\r\n        pdf.addPage()\r\n        yPosition = 10\r\n\r\n        // Draw table header on each new page\r\n        pdf.setDrawColor(0) // Reset color\r\n        let initialRectVal_b = 10\r\n        let initialTextVal_b = 15\r\n        selectedOption?.forEach((column, i) => {\r\n          pdf.setFillColor(200, 220, 255)\r\n          if (i == 0) {\r\n            pdf.rect(initialRectVal_b, yPosition, cellWidth, 8, 'F')\r\n            pdf.text(column.label, initialTextVal_b, yPosition + 5)\r\n          } else {\r\n            initialRectVal_b = initialRectVal_b + selectedOption[i - 1].rectVal\r\n            initialTextVal_b = initialTextVal_b + selectedOption[i - 1].textVal\r\n            if (column.label == 'Address') {\r\n              pdf.rect(initialRectVal_b, yPosition, 100, 8, 'F')\r\n            } else {\r\n              pdf.rect(initialRectVal_b, yPosition, 30, 8, 'F')\r\n            }\r\n\r\n            pdf.text(column.label, initialTextVal_b, yPosition + 5)\r\n          }\r\n        })\r\n\r\n        yPosition += 10 // Move to the next row\r\n      }\r\n      pdf.setFontSize(10)\r\n\r\n      // Draw cell content\r\n      let initialRectVal_b = 10\r\n      let initialTextVal_b = 15\r\n      selectedOption?.forEach((column, i) => {\r\n        if (i == 0) {\r\n          pdf.rect(initialRectVal_b, yPosition, cellWidth, rowHeight)\r\n          pdf.text(row.attributes[column.value], initialTextVal_b, yPosition + rowHeight / 2, {\r\n            align: column.align,\r\n            baseline: 'middle',\r\n          })\r\n        } else {\r\n          initialRectVal_b = initialRectVal_b + selectedOption[i - 1].rectVal\r\n          initialTextVal_b = initialTextVal_b + selectedOption[i - 1].textVal + 5\r\n\r\n          if (column.value == 'Address') {\r\n            pdf.rect(initialRectVal_b, yPosition, 100, rowHeight)\r\n            pdf.text(\r\n              row.attributes[column.value],\r\n              initialTextVal_b - 10,\r\n              yPosition + rowHeight / 2,\r\n              {\r\n                align: column.align,\r\n                baseline: 'middle',\r\n              },\r\n            )\r\n          } else {\r\n            pdf.rect(initialRectVal_b, yPosition, 30, rowHeight)\r\n            pdf.text(row.attributes[column.value], initialTextVal_b, yPosition + rowHeight / 2, {\r\n              align: column.align,\r\n              baseline: 'middle',\r\n            })\r\n          }\r\n        }\r\n      })\r\n\r\n      // Add other columns based on your data structure\r\n\r\n      yPosition += rowHeight\r\n    })\r\n\r\n    // Save or download the PDF\r\n    pdf.save(`Report_${new Date().toLocaleString()}.pdf`)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let filteredData = data.map((item) => item.attributes)\r\n    const sortedDetails = filteredData.map((item) => {\r\n      const sortedItem = {}\r\n\r\n      // Specify the desired order of property names\r\n      const propertyOrder = [\r\n        'NIC_Number',\r\n        'Title',\r\n        'Name',\r\n        'Gender',\r\n        'Civil_Status',\r\n        'Occupation',\r\n        'Date_of_Birth',\r\n        'NJP_Party_Member',\r\n        'Address',\r\n        'Mobile_Number_1',\r\n        'Mobile_Number_2',\r\n        'WhatsApp_Number',\r\n        'Facebook_Link',\r\n        'District',\r\n        'Seat',\r\n        'Local_Authority',\r\n        'Ward',\r\n        'GN_Division',\r\n        'Street_Village',\r\n        'Organizer_Category',\r\n        'Level_of_Strength',\r\n        'Political_Background',\r\n        'Meeting_Complete',\r\n        'Meeting_Date',\r\n        'createdAt',\r\n        'updatedAt',\r\n        'publishedAt',\r\n      ]\r\n\r\n      // Sort the properties based on the specified order\r\n      propertyOrder.forEach((property) => {\r\n        if (item.hasOwnProperty(property)) {\r\n          sortedItem[property] = item[property]\r\n        }\r\n      })\r\n\r\n      return sortedItem\r\n    })\r\n    setSortedData(sortedDetails)\r\n  }, [])\r\n\r\n  const downloadAsExcel = async () => {\r\n    setDownloadButtonDisable(true)\r\n\r\n    const totalItems = sortedData.length\r\n    let completedItems = 0\r\n    setLoadingMsg(null)\r\n\r\n    const processData = async () => {\r\n      if (completedItems < totalItems) {\r\n        const item = sortedData[completedItems]\r\n\r\n        try {\r\n          item.NJP_Party_Member = item.NJP_Party_Member ? 'Yes' : 'No'\r\n          item.Meeting_Complete = item.Meeting_Complete ? 'Yes' : 'No'\r\n          item.Date_of_Birth = moment(item.Date_of_Birth).format('DD-MM-YYYY')\r\n          item.District = (\r\n            await LocationService.getDistrictById(item.District)\r\n          ).data.attributes.Name\r\n          item.Seat = (await LocationService.getSeatById(item.Seat)).data.attributes.Name\r\n          item.Local_Authority = (\r\n            await LocationService.getLocalAuthorityById(item.Local_Authority)\r\n          ).data.attributes.Name\r\n          item.Ward = (await LocationService.getWardById(item.Ward)).data.attributes.Name\r\n          item.Street_Village = (\r\n            await LocationService.getStreetById(item.Street_Village)\r\n          ).data.attributes.Name\r\n          item.GN_Division = (\r\n            await LocationService.getGnDivisionById(item.GN_Division)\r\n          ).data.attributes.Name\r\n\r\n          if (type == 'voter') {\r\n            item.District_Organizer = (\r\n              await OrganizersService.getOrganizer(item.District_Organizer)\r\n            ).data.attributes.Name\r\n            item.Street_Village_Organizer = (\r\n              await OrganizersService.getOrganizer(item.Street_Village_Organizer)\r\n            ).data.attributes.Name\r\n            item.Seat_Organizer = (\r\n              await OrganizersService.getOrganizer(item.Seat_Organizer)\r\n            ).data.attributes.Name\r\n            item.Local_Authority_Organizer = (\r\n              await OrganizersService.getOrganizer(item.Local_Authority_Organizer)\r\n            ).data.attributes.Name\r\n            item.Ward_Organizer = (\r\n              await OrganizersService.getOrganizer(item.Ward_Organizer)\r\n            ).data.attributes.Name\r\n            item.GN_Division_Organizer = (\r\n              await OrganizersService.getOrganizer(item.GN_Division_Organizer)\r\n            ).data.attributes.Name\r\n          }\r\n\r\n          completedItems += 1\r\n\r\n          // Calculate loading percentage\r\n          const loadingPercentage = (completedItems / totalItems) * 100\r\n          setLoadingMsg(`Loading: ${loadingPercentage.toFixed(2)}%`)\r\n\r\n          await new Promise((resolve) => setTimeout(resolve, 500))\r\n          await processData() // Process the next item\r\n\r\n          return item\r\n        } catch (err) {\r\n          console.error(err)\r\n          setLoadingMsg('Please Genarate Report Again')\r\n          setDownloadButtonDisable(false)\r\n          return item // You might want to handle the error differently or skip the item\r\n        }\r\n      } else {\r\n        // All items processed\r\n        const newData = sortedData\r\n        exportToExcel(newData, `Full_Report_${new Date().toLocaleString()}`)\r\n        setDownloadButtonDisable(false)\r\n      }\r\n    }\r\n\r\n    await processData() // Start processing\r\n\r\n    // exportToExcel(newData, `Full_Report_${new Date().toLocaleString()}`)\r\n    // setDownloadButtonDisable(false)\r\n  }\r\n\r\n  const calculateEstimation = () => {\r\n    const estimation = ((0.5 * sortedData?.length) / 60).toFixed(2)\r\n\r\n    var integerPart = parseInt(estimation);\r\n    var decimalPart = ((estimation - integerPart).toFixed(2) * 100) * 60 / 100\r\n    \r\n    if(integerPart == 0) {\r\n     return <span style={{fontWeight: 'bold'}}>{decimalPart.toFixed(0)} seconds. </span>\r\n    }\r\n\r\n    return <span style={{fontWeight: 'bold'}}>{integerPart} minutes and {decimalPart.toFixed(0)} seconds. </span>\r\n  }\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div className=\"mt-2\" id=\"print-table-container\">\r\n        <h3>Preview Records</h3>\r\n\r\n        <CCol xs=\"12\" sm=\"6\">\r\n          <CFormLabel htmlFor=\"columns-sel\"> Select Columns: (For PDF Document) </CFormLabel>\r\n          <Select\r\n            id=\"columns-sel\"\r\n            className=\"mb-4\"\r\n            isMulti\r\n            value={selectedOption}\r\n            onChange={setSelectedOption}\r\n            options={options}\r\n          />\r\n        </CCol>\r\n        <VirtualizedTable data={data} columns={selectedOption} />\r\n      </div>\r\n      <div className=\"mt-2 gap-3 d-flex justify-content-end\">\r\n        <CButton\r\n          size=\"sm\"\r\n          className=\"ml-auto\"\r\n          style={{ width: '150px', backgroundColor: COLORS.MAIN, border: '0px' }}\r\n          onClick={generatePdf}\r\n          disabled={downloadButtonDisable}\r\n        >\r\n          Download PDF\r\n        </CButton>\r\n        <CButton\r\n          size=\"sm\"\r\n          className=\"ml-auto\"\r\n          style={{ width: '150px', backgroundColor: COLORS.MAIN, border: '0px' }}\r\n          onClick={() => setWarningModalVisible(true)}\r\n          disabled={downloadButtonDisable}\r\n        >\r\n          Download Excel <br></br>(Full Report)\r\n        </CButton>\r\n      </div>\r\n      <div className=\"mt-2 gap-3 d-flex justify-content-end\">\r\n        <p>{loadingMsg}</p>\r\n      </div>\r\n\r\n      <CCol\r\n        xs=\"12\"\r\n        sm=\"8\"\r\n        style={{ backgroundColor: COLORS.LIGHT, padding: '20px', borderRadius: '10px' }}\r\n      >\r\n        <p>Excel Tips:</p>\r\n        <ul>\r\n          <li>\r\n            Ctrl + a to select all and Alt + H, then O, and then I. You can auto fit all the columns\r\n            width.\r\n          </li>\r\n          <li>Ctrl + L to aligns the line or selected text to the left of the screen.</li>\r\n        </ul>\r\n      </CCol>\r\n      <WarningModal\r\n        open={warningModalVisible}\r\n        onOpen={(status) => setWarningModalVisible(status)}\r\n        okay={(status) => {\r\n          if (status) {\r\n            downloadAsExcel()\r\n          }\r\n        }}\r\n        title={'Action Required!'}\r\n        description={\r\n          <div>\r\n            The estimation time for file generation is {calculateEstimation()} If acceptable, please proceed.\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PdfDocument\r\n","import {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormLabel,\r\n  CFormTextarea,\r\n  CRow,\r\n  CSpinner,\r\n} from '@coreui/react'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport { jsonToSelectBox } from 'src/common/common'\r\nimport { COLORS, MODAL_MSGES } from 'src/common/const'\r\nimport OccupationList from 'src/data/Occupations.json'\r\nimport PersonTypes from 'src/data/personTypes.json'\r\nimport SearchCategories from 'src/data/SearchCategories.json'\r\nimport { LocationService } from 'src/services/location.service'\r\nimport TokenService from 'src/services/TokenService'\r\nimport VirtualizedTable from 'src/components/VirtualizedTable'\r\nimport PdfDocument from 'src/components/PdfDocument'\r\nimport { OrganizersService } from 'src/services/organizers.service'\r\nimport Loading from 'src/components/Loading'\r\nimport NoDataArt from 'src/components/NoDataArt'\r\nimport { votersService } from 'src/services/voters.service'\r\n\r\nconst INITIAL_VALUE = ''\r\nconst sampleData = Array.from({ length: 50000 }, (_, index) => ({\r\n  id: index,\r\n  name: `Name ${index}`,\r\n}))\r\n\r\nconst options = [\r\n  { value: 'Name', label: 'Name' },\r\n  { value: 'NIC_Number', label: 'NIC' },\r\n  { value: 'Mobile_Number_1', label: 'Contact No.' },\r\n  { value: 'Gender', label: 'Gender' },\r\n]\r\n\r\nfunction ReportsPage() {\r\n  const targetRef = useRef(null)\r\n\r\n  const [searchByCivilStatus, setSearchByCivilStatus] = useState(false)\r\n\r\n  const [selectedReportType, setSelectedReportType] = useState(null)\r\n  const [selectedSearchCategories, setSelectedSearchCategories] = useState([])\r\n  const [locationAlertMessage, setLocationAlertMessage] = useState(\r\n    'Something Wrong With Location Server',\r\n  )\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [selectedPersonType, setSelectedPersonType] = useState(null)\r\n  const [selectedGender, setSelectedGender] = useState(INITIAL_VALUE)\r\n  const [selectedOccupation, setSelectedOccupation] = useState(INITIAL_VALUE)\r\n  const [selectedCivilStatus, setSelectedCivilStatus] = useState(INITIAL_VALUE)\r\n  const [isNJP, setIsNJP] = useState(false)\r\n\r\n  //location\r\n  const [district, setDistrict] = useState(INITIAL_VALUE)\r\n  const [seat, setSeat] = useState(INITIAL_VALUE)\r\n  const [localAuthority, setLocalAuthority] = useState(INITIAL_VALUE)\r\n  const [ward, setWard] = useState(INITIAL_VALUE)\r\n  const [streetVillage, setStreetVillage] = useState(INITIAL_VALUE)\r\n  const [gnDivision, setGnDivision] = useState(INITIAL_VALUE)\r\n\r\n  const [districtOptions, setDistrictOptions] = useState([])\r\n  const [seatOptions, setSeatOptions] = useState([])\r\n  const [localAuthorityOptions, setLocalAuthorityOptions] = useState([])\r\n  const [wardOptions, setWardOptions] = useState([])\r\n  const [streetVillageOptions, setStreetVillageOptions] = useState([])\r\n  const [gnDivisionOptions, setGnDivisionOptions] = useState([])\r\n\r\n  const [data, setData] = useState(null)\r\n  const [selectedOption, setSelectedOption] = useState(null)\r\n\r\n  useEffect(() => {\r\n    LocationService.getDistricts()\r\n      .then((res) => {\r\n        const data = res.data\r\n        const clientDistricts = TokenService.getClientDistricts()\r\n        const clientDataIds = clientDistricts.map((client) => client.id)\r\n        const filteredData = data.filter((data) => clientDataIds.includes(data.id))\r\n        const selectArray = filteredData.map((item) => {\r\n          return { value: item.id, label: item.attributes.Name }\r\n        })\r\n        setDistrictOptions(selectArray)\r\n      })\r\n      .catch((err) => console.log(err))\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setSeat(INITIAL_VALUE)\r\n    setLocalAuthority(INITIAL_VALUE)\r\n    setWard(INITIAL_VALUE)\r\n    setGnDivision(INITIAL_VALUE)\r\n    setStreetVillage(INITIAL_VALUE)\r\n    setLocationAlertMessage(false)\r\n    if (district) {\r\n      LocationService.getSeatsByDistrictId(district.value)\r\n        .then((res) => {\r\n          const data = res.data\r\n          const selectArray = data.map((item) => {\r\n            return { value: item.id, label: item.attributes.Name }\r\n          })\r\n          setSeatOptions(selectArray)\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          setLocationAlertMessage(true)\r\n        })\r\n    }\r\n  }, [district])\r\n\r\n  useEffect(() => {\r\n    setLocalAuthority(INITIAL_VALUE)\r\n    setWard(INITIAL_VALUE)\r\n    setGnDivision(INITIAL_VALUE)\r\n    setStreetVillage(INITIAL_VALUE)\r\n    if (seat)\r\n      LocationService.getLocalAuthoritiesBySeatId(seat.value)\r\n        .then((res) => {\r\n          const data = res.data\r\n          const selectArray = data.map((item) => {\r\n            return { value: item.id, label: item.attributes.Name }\r\n          })\r\n          setLocalAuthorityOptions(selectArray)\r\n        })\r\n        .catch((err) => console.log(err))\r\n  }, [seat])\r\n\r\n  useEffect(() => {\r\n    setWard(INITIAL_VALUE)\r\n    setGnDivision(INITIAL_VALUE)\r\n    setStreetVillage(INITIAL_VALUE)\r\n    if (localAuthority)\r\n      LocationService.getWardsByLocalAuthorityId(localAuthority.value)\r\n        .then((res) => {\r\n          const data = res.data\r\n          const selectArray = data.map((item) => {\r\n            return { value: item.id, label: item.attributes.Name }\r\n          })\r\n          setWardOptions(selectArray)\r\n        })\r\n        .catch((err) => console.log(err))\r\n  }, [localAuthority])\r\n\r\n  useEffect(() => {\r\n    setGnDivision(INITIAL_VALUE)\r\n    setStreetVillage(INITIAL_VALUE)\r\n    if (ward)\r\n      LocationService.getGnDivisionsByWardId(ward.value)\r\n        .then((res) => {\r\n          const data = res.data\r\n          const selectArray = data.map((item) => {\r\n            return { value: item.id, label: item.attributes.Name }\r\n          })\r\n          setGnDivisionOptions(selectArray)\r\n        })\r\n        .catch((err) => console.log(err))\r\n  }, [ward])\r\n\r\n  useEffect(() => {\r\n    setStreetVillage(INITIAL_VALUE)\r\n    if (gnDivision)\r\n      LocationService.getStreetsByGnDivisionId(gnDivision.value)\r\n        .then((res) => {\r\n          const data = res.data\r\n          const selectArray = data.map((item) => {\r\n            return { value: item.id, label: item.attributes.Name }\r\n          })\r\n          setStreetVillageOptions(selectArray)\r\n        })\r\n        .catch((err) => console.log(err))\r\n  }, [gnDivision])\r\n\r\n  const scrollToTarget = () => {\r\n    if (targetRef.current) {\r\n      targetRef.current.scrollIntoView({ behavior: 'smooth' })\r\n    }\r\n  }\r\n\r\n  const genarateReport = () => {\r\n    setLoading(true)\r\n    const filters = [\r\n      {\r\n        key: 'Gender',\r\n        value: selectedGender.value ? selectedGender.value : '',\r\n      },\r\n      {\r\n        key: 'Occupation',\r\n        value: selectedOccupation.value ? selectedOccupation.value : '',\r\n      },\r\n      {\r\n        key: 'Civil_Status',\r\n        value: selectedCivilStatus.value ? selectedCivilStatus.value : '',\r\n      },\r\n      {\r\n        key: 'District',\r\n        value: district.value ? district.value : '',\r\n      },\r\n      {\r\n        key: 'Seat',\r\n        value: seat.value ? seat.value : '',\r\n      },\r\n      {\r\n        key: 'Ward',\r\n        value: ward.value ? ward.value : '',\r\n      },\r\n      {\r\n        key: 'GN_Division',\r\n        value: gnDivision.value ? gnDivision.value : '',\r\n      },\r\n      {\r\n        key: 'Street_Village',\r\n        value: streetVillage.value ? streetVillage.value : '',\r\n      },\r\n    ]\r\n\r\n    if (selectedPersonType?.value.toLowerCase() == 'organizers') {\r\n      OrganizersService.getOrganizersByFiltering(1, 10000000, filters)\r\n        .then((res) => {\r\n          const data = res?.data\r\n          console.log(res)\r\n          setData(res.data)\r\n          setLoading(false)\r\n          scrollToTarget()\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          setLoading(false)\r\n          // if (err?.response?.status === 403) {\r\n          //   setOrganizersList([])\r\n          //   return\r\n          // }\r\n          // setErrorMsg(true)\r\n          scrollToTarget()\r\n        })\r\n    } else {\r\n      votersService\r\n        .getVotersByFiltering(1, 10000000, filters)\r\n        .then((res) => {\r\n          const data = res?.data\r\n          console.log(res)\r\n          setData(res.data)\r\n          setLoading(false)\r\n          scrollToTarget()\r\n        })\r\n        .catch((err) => {\r\n          console.log(err)\r\n          setLoading(false)\r\n          scrollToTarget()\r\n          // if (err?.response?.status === 403) {\r\n          //   setOrganizersList([])\r\n          //   return\r\n          // }\r\n          // setErrorMsg(true)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CCard className=\"mb-4\">\r\n        <CCardHeader>\r\n          <h5>Reports & Campaign Managment</h5>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          {/* <CRow>\r\n            <CCol md={4}>\r\n              <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                Report Type\r\n              </CFormLabel>\r\n              <Select\r\n                type=\"text\"\r\n                id=\"exampleFormControlInput1\"\r\n                size=\"sm\"\r\n                onChange={(e) => setSelectedReportType(e)}\r\n                options={jsonToSelectBox(ReportsTypes, 'title')}\r\n              ></Select>\r\n            </CCol>\r\n            <CCol md={4}></CCol>\r\n            <CCol md={4} hidden={!selectedReportType}>\r\n              <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                Search Categories\r\n              </CFormLabel>\r\n              <Select\r\n                isMulti={true}\r\n                type=\"text\"\r\n                id=\"exampleFormControlInput1\"\r\n                size=\"sm\"\r\n                onChange={(e) => setSelectedSearchCategories(e)}\r\n                options={jsonToSelectBox(SearchCategories, 'title', 'value')}\r\n              ></Select>\r\n            </CCol>\r\n          </CRow>\r\n          {selectedSearchCategories.map((categoryInputs, key) => (\r\n            <CRow key={key}>\r\n                <CCol md={8}></CCol>\r\n              <CCol md={4}>\r\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                  {categoryInputs.label}\r\n                </CFormLabel>\r\n                <Select\r\n                  isMulti={true}\r\n                  type=\"text\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  size=\"sm\"\r\n                  options={jsonToSelectBox(SearchCategories, 'title', 'value')}\r\n                ></Select>\r\n              </CCol>\r\n            </CRow>\r\n          ))} */}\r\n          <CRow>\r\n            <CCol md={6} className=\"mb-4\">\r\n              <CRow className=\"mb-2\">\r\n                <span style={{ fontWeight: 'bold' }}>Basic Filters</span>\r\n              </CRow>\r\n              <CRow>\r\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                  Person Type\r\n                </CFormLabel>\r\n                <Select\r\n                  type=\"text\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => setSelectedPersonType(e)}\r\n                  options={jsonToSelectBox(PersonTypes, 'title')}\r\n                ></Select>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                  Gender\r\n                </CFormLabel>\r\n                <Select\r\n                  type=\"text\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  size=\"sm\"\r\n                  value={selectedGender}\r\n                  onChange={(e) => setSelectedGender(e)}\r\n                  options={[\r\n                    { label: 'Male', value: 'Male' },\r\n                    { label: 'Female', value: 'Female' },\r\n                    { label: 'Not Specify', value: 'Not Specify' },\r\n                  ]}\r\n                ></Select>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                  Occupation\r\n                </CFormLabel>\r\n                <Select\r\n                  type=\"text\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  size=\"sm\"\r\n                  options={jsonToSelectBox(OccupationList, 'title')}\r\n                  value={selectedOccupation}\r\n                  onChange={(e) => setSelectedOccupation(e)}\r\n                ></Select>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                  Civil Status\r\n                </CFormLabel>\r\n                <Select\r\n                  type=\"text\"\r\n                  id=\"exampleFormControlInput1\"\r\n                  size=\"sm\"\r\n                  options={[\r\n                    { label: 'Single', value: 'Single' },\r\n                    { label: 'Married', value: 'Married' },\r\n                  ]}\r\n                  value={selectedCivilStatus}\r\n                  onChange={(e) => setSelectedCivilStatus(e)}\r\n                ></Select>\r\n              </CRow>\r\n              {/* <CRow className=\"mt-2\">\r\n                <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                  NJP Party Member? <span style={{ color: 'red' }}>*</span>\r\n                </CFormLabel>\r\n                <br />\r\n                <CFormCheck\r\n                  inline\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"inlineCheckbox1\"\r\n                  value=\"option1\"\r\n                  label=\"Yes\"\r\n                  checked={isNJP}\r\n                  onChange={(e) => setIsNJP(true)}\r\n                />\r\n                <CFormCheck\r\n                  inline\r\n                  type=\"radio\"\r\n                  name=\"inlineRadioOptions\"\r\n                  id=\"inlineCheckbox2\"\r\n                  value=\"option2\"\r\n                  label=\"No\"\r\n                  checked={!isNJP}\r\n                  onChange={() => setIsNJP(false)}\r\n                />\r\n              </CRow> */}\r\n            </CCol>\r\n            <CCol className=\"mb-4\">\r\n              <CRow className=\"mb-2\">\r\n                <span style={{ fontWeight: 'bold' }}>Location Filters</span>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                    District\r\n                  </CFormLabel>\r\n                  <Select\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    size=\"sm\"\r\n                    options={districtOptions}\r\n                    value={district}\r\n                    onChange={(e) => setDistrict(e)}\r\n                  ></Select>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                    Seat\r\n                  </CFormLabel>\r\n                  <Select\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    size=\"sm\"\r\n                    isDisabled={!district}\r\n                    options={seatOptions}\r\n                    value={seat}\r\n                    onChange={(e) => setSeat(e)}\r\n                  ></Select>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                    Local Authority\r\n                  </CFormLabel>\r\n                  <Select\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    size=\"sm\"\r\n                    isDisabled={!seat}\r\n                    options={localAuthorityOptions}\r\n                    value={localAuthority}\r\n                    onChange={(e) => setLocalAuthority(e)}\r\n                  ></Select>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                    Ward\r\n                  </CFormLabel>\r\n                  <Select\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    size=\"sm\"\r\n                    isDisabled={!localAuthority}\r\n                    options={wardOptions}\r\n                    value={ward}\r\n                    onChange={(e) => setWard(e)}\r\n                  ></Select>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                    GN Division\r\n                  </CFormLabel>\r\n                  <Select\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    size=\"sm\"\r\n                    isDisabled={!ward}\r\n                    options={gnDivisionOptions}\r\n                    value={gnDivision}\r\n                    onChange={(e) => setGnDivision(e)}\r\n                  ></Select>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow className=\"mt-2\">\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"staticEmail\" className=\"col-form-label\">\r\n                    Street Village\r\n                  </CFormLabel>\r\n                  <Select\r\n                    type=\"text\"\r\n                    id=\"exampleFormControlInput1\"\r\n                    size=\"sm\"\r\n                    isDisabled={!gnDivision}\r\n                    options={streetVillageOptions}\r\n                    value={streetVillage}\r\n                    onChange={(e) => setStreetVillage(e)}\r\n                  ></Select>\r\n                </CCol>\r\n              </CRow>\r\n            </CCol>\r\n          </CRow>\r\n          <CRow\r\n            className=\"mt-4 gap-1 justify-content-end\"\r\n            style={{ position: 'sticky', bottom: '1rem', alignSelf: 'flex-end' }}\r\n          >\r\n            <CCol md={2}>\r\n              <CButton\r\n                disabled={loading}\r\n                color=\"primary\"\r\n                style={{ width: '100%', backgroundColor: COLORS.MAIN, border: '0px' }}\r\n                onClick={genarateReport}\r\n              >\r\n                Genarate Report\r\n              </CButton>\r\n            </CCol>\r\n            <CCol md={2}>\r\n              <CButton\r\n                disabled={loading}\r\n                color=\"light\"\r\n                style={{ width: '100%' }}\r\n                onClick={() => {\r\n                  window.location.reload(false)\r\n                }}\r\n              >\r\n                Clear Filters\r\n              </CButton>\r\n            </CCol>\r\n          </CRow>\r\n          <div ref={targetRef}>\r\n            {!loading && data && data?.length != 0 && (\r\n              <CRow className=\"mt-4\">\r\n                <hr />\r\n                <PdfDocument\r\n                  data={data}\r\n                  columns={selectedOption}\r\n                  type={selectedPersonType?.value.toLowerCase()}\r\n                />\r\n              </CRow>\r\n            )}\r\n            {!loading && data?.length == 0 && (\r\n              <>\r\n                <hr />\r\n                <NoDataArt\r\n                  visible={true}\r\n                  description={MODAL_MSGES.SEARCH_NO_DATA_DOUND}\r\n                  size={10}\r\n                />\r\n              </>\r\n            )}\r\n            {loading && <Loading loading={loading} />}\r\n          </div>\r\n          {!loading && data && data?.length != 0 && (\r\n            <div className=\"mt-4\">\r\n              <hr />\r\n              <h3  className=\"mt-4\">Message Campaigns</h3>\r\n              <CRow>\r\n                <CCol>\r\n                  <CFormLabel htmlFor=\"columns-sel\">\r\n                    Write a message that you want send for above selected records:\r\n                  </CFormLabel>\r\n                  <CFormTextarea id=\"columns-sel\" className=\"mb-4\" placeholder='write here...' style={{height: '100px'}}/>\r\n                </CCol>\r\n              </CRow>\r\n              <CRow>\r\n                <CCol md={2} xs={6}>\r\n                <CButton\r\n                disabled={loading}\r\n                color=\"primary\"\r\n                style={{ width: '100%', backgroundColor: COLORS.MAIN, border: '0px' }}\r\n                onClick={() => {\r\n                  window.location.reload(false)\r\n                }}\r\n              >\r\n                Send Message\r\n              </CButton>\r\n                </CCol>\r\n              </CRow>\r\n            </div>\r\n          )}\r\n        </CCardBody>\r\n      </CCard>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ReportsPage\r\n"],"names":["_ref","title","description","open","onOpen","okay","_ref$buttonTitle","buttonTitle","useNavigate","_jsxs","CModal","alignment","visible","onClose","children","_jsx","CModalHeader","CModalTitle","id","CModalBody","className","style","textAlign","CIcon","color","COLORS","MAIN","icon","cilWarning","width","fontSize","CModalFooter","CButton","onClick","backgroundColor","border","LocationService","getDistricts","_getDistricts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","algoAxiosInstance","get","sent","abrupt","data","t0","stop","apply","arguments","getDistrictById","_getDistrictById","_callee2","_context2","concat","_x","getSeatsByDistrictId","_getSeatsByDistrictId","_callee3","districtId","_context3","_x2","getAllSeats","_getAllSeats","_callee4","_context4","getSeatById","_getSeatById","_callee5","_context5","_x3","getLocalAuthoritiesBySeatId","_getLocalAuthoritiesBySeatId","_callee6","seatId","_context6","_x4","getLocalAuthorityById","_getLocalAuthorityById","_callee7","_context7","_x5","getWardsByLocalAuthorityId","_getWardsByLocalAuthorityId","_callee8","localAuthorityId","_context8","_x6","getWardById","_getWardById","_callee9","_context9","_x7","getGnDivisionsByWardId","_getGnDivisionsByWardId","_callee10","wardId","_context10","_x8","getGnDivisionById","_getGnDivisionById","_callee11","_context11","_x9","getStreetsByGnDivisionId","_getStreetsByGnDivisionId","_callee12","gnDivisionId","_context12","_x10","getStreetById","_getStreetById","_callee13","_context13","_x11","votersService","getVoters","_getVoters","page","pageSize","_args","length","undefined","axiosInstance","getVoter","_getVoter","getVotorsByBirthday","_getVotorsByBirthday","birthday","getVotersByFiltering","_getVotersByFiltering","filters","query","_args4","map","filter","key","value","getVotersByBirthday","_getVotersByBirthday","addVoter","_addVoter","post","updateVoter","_updateVoter","put","columns","VariableSizeList","height","itemCount","itemSize","index","name","attributes","Name","nic","mobile","address","maxLength","Math","max","factor","window","innerWidth","_ref2","_objectSpread","display","alignItems","borderBottom","column","i","flex","padding","options","label","rectVal","textVal","align","type","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","_useState3","_useState4","warningModalVisible","setWarningModalVisible","_useState5","_useState6","loadingMsg","setLoadingMsg","_useState7","_useState8","downloadButtonDisable","setDownloadButtonDisable","_useState9","_useState10","sortedData","setSortedData","useEffect","sortedDetails","item","sortedItem","forEach","property","hasOwnProperty","downloadAsExcel","totalItems","completedItems","processData","_ref3","newData","NJP_Party_Member","Meeting_Complete","Date_of_Birth","moment","format","District","Seat","Local_Authority","Ward","Street_Village","GN_Division","OrganizersService","getOrganizer","District_Organizer","Street_Village_Organizer","Seat_Organizer","Local_Authority_Organizer","Ward_Organizer","GN_Division_Organizer","toFixed","Promise","resolve","setTimeout","console","error","exportToExcel","Date","toLocaleString","CCol","xs","sm","CFormLabel","htmlFor","Select","isMulti","onChange","VirtualizedTable","size","pdf","jsPDF","unit","orientation","pageHeight","internal","yPosition","text","CLIENT_NAME","toUpperCase","baseline","setFontSize","toLocaleDateString","setDrawColor","initialRectVal","initialTextVal","setFillColor","rect","row","addPage","initialRectVal_b","initialTextVal_b","rowHeight","save","disabled","LIGHT","borderRadius","WarningModal","status","estimation","integerPart","parseInt","decimalPart","fontWeight","calculateEstimation","INITIAL_VALUE","Array","from","_","targetRef","useRef","setLocationAlertMessage","loading","setLoading","_useState11","_useState12","selectedPersonType","setSelectedPersonType","_useState13","_useState14","selectedGender","setSelectedGender","_useState15","_useState16","selectedOccupation","setSelectedOccupation","_useState17","_useState18","selectedCivilStatus","setSelectedCivilStatus","_useState19","_useState20","_useState21","_useState22","district","setDistrict","_useState23","_useState24","seat","setSeat","_useState25","_useState26","localAuthority","setLocalAuthority","_useState27","_useState28","ward","setWard","_useState29","_useState30","streetVillage","setStreetVillage","_useState31","_useState32","gnDivision","setGnDivision","_useState33","_useState34","districtOptions","setDistrictOptions","_useState35","_useState36","seatOptions","setSeatOptions","_useState37","_useState38","localAuthorityOptions","setLocalAuthorityOptions","_useState39","_useState40","wardOptions","setWardOptions","_useState41","_useState42","streetVillageOptions","setStreetVillageOptions","_useState43","_useState44","gnDivisionOptions","setGnDivisionOptions","_useState45","_useState46","setData","_useState47","_useState48","then","res","clientDataIds","TokenService","getClientDistricts","client","selectArray","includes","catch","err","log","scrollToTarget","current","scrollIntoView","behavior","CCard","CCardHeader","CCardBody","CRow","md","e","jsonToSelectBox","PersonTypes","OccupationList","isDisabled","position","bottom","alignSelf","toLowerCase","getOrganizersByFiltering","location","reload","ref","PdfDocument","_Fragment","NoDataArt","MODAL_MSGES","SEARCH_NO_DATA_DOUND","Loading","CFormTextarea","placeholder"],"sourceRoot":""}